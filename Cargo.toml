[workspace]

members= [
	# Core framework

  "lib/hdk_relay_pagination",
  "lib/hdk_rpc_errors",
  "lib/hdk_records",
  "lib/hdk_semantic_indexes/client",
  "lib/hdk_semantic_indexes/error",
  "lib/hdk_semantic_indexes/integrity_core",
  "lib/hdk_semantic_indexes/integrity_zome",
  "lib/hdk_semantic_indexes/rpc",
  "lib/hdk_semantic_indexes/zome",
  "lib/hdk_semantic_indexes/zome_derive",
  "lib/hdk_time_indexing",
  "lib/hdk_uuid_types",
  "lib/vf_actions",
  "lib/serde_maybe_undefined",
  "lib/vf_measurement",
  "lib/vf_attributes_hdk",

  #-----------------------------------
  #
  # REA-on-Holochain modules
  #
  # zome: Source code for part of an application 'Cell'. A discrete bundle of logic,
  #       compiled to WASM, that can be combined with other 'zomes' to create application
  #       'DNAs' which service different combinations of functionality.
  #       Holochain network participants all execute the same 'DNA' individually to boot
  #       up their 'Cell' and connect to other 'Cells' on the network.
  #       Some record types exist in multiple DNAs, as part of multiple relationships.
  #       These have multiple `zome_` crates- one for each 'DNA' the record exists within.
  #
  # lib:  Library code forming the bulk of the logic of the zome, provided separately such
  #       that it can be imported by other zome authors and mixed in with different logic
  #       in other apps.
  #
  # rpc:  Struct definitions necessary to interface with hREA 'zomes' via their API.
  #       External Rust applications can use these to build interfaces into hREA
  #       networks, and third-party zomes can use them internally to communicate back
  #       and forth with REA components running inside their Holochain conductor.
  #
  # storage & storage_consts: definitions for the internal data structures saved to agent
  #       sourcechains and the shared network space inside hREA DNA components.
  #       Composable zomes built to augment, restrict or extend hREA's base functionality
  #       may use these struct definitions to interact with hREA data inside the same DNA.
  #
  # zome_idx_*: indexing zomes used to track references to data in related record storage zomes.
  #       Record types generally each have their own companion index zome in the same DNA, and multiple
  #       index zomes where a record exists in relationships held in multiple DNAs.
  #
  #-----------------------------------

  "zomes/rea_action/zome",
  "zomes/rea_agent/rpc",
  "zomes/rea_agent/storage_consts",
  "zomes/rea_agent/zome_idx_agent",
  "zomes/rea_agent/lib",
  "zomes/rea_agent/storage",
  "zomes/rea_agent/zome",
  "zomes/rea_agent/integrity_zome",
  "zomes/rea_agreement/lib",
  "zomes/rea_agreement/rpc",
  "zomes/rea_agreement/storage",
  "zomes/rea_agreement/storage_consts",
  "zomes/rea_agreement/zome",
  "zomes/rea_agreement/integrity_zome",
  "zomes/rea_agreement/lib",
  "zomes/rea_agreement/zome_idx_agreement",
  "zomes/rea_commitment/lib",
  "zomes/rea_commitment/rpc",
  "zomes/rea_commitment/storage",
  "zomes/rea_commitment/storage_consts",
  "zomes/rea_commitment/zome",
  "zomes/rea_commitment/integrity_zome",
  "zomes/rea_commitment/zome_idx_planning",
  "zomes/rea_economic_event/lib",
  "zomes/rea_economic_event/rpc",
  "zomes/rea_economic_event/storage",
  "zomes/rea_economic_event/storage_consts",
  "zomes/rea_economic_event/zome_api",
  "zomes/rea_economic_event/zome",
  "zomes/rea_economic_event/integrity_zome",
  "zomes/rea_economic_event/zome_idx_observation",
  "zomes/rea_economic_resource/lib",
  "zomes/rea_economic_resource/rpc",
  "zomes/rea_economic_resource/storage",
  "zomes/rea_economic_resource/storage_consts",
  "zomes/rea_economic_resource/zome_api",
  "zomes/rea_economic_resource/zome",
  "zomes/rea_economic_resource/integrity_zome",
  "zomes/rea_economic_resource/zome_idx_observation",
  "zomes/rea_fulfillment/lib",
  "zomes/rea_fulfillment/lib_destination",
  "zomes/rea_fulfillment/lib_origin",
  "zomes/rea_fulfillment/rpc",
  "zomes/rea_fulfillment/storage",
  "zomes/rea_fulfillment/storage_consts",
  "zomes/rea_fulfillment/zome_observation",
  "zomes/rea_fulfillment/zome_planning",
  "zomes/rea_fulfillment/integrity_zome",
  "zomes/rea_fulfillment/zome_idx_observation",
  "zomes/rea_fulfillment/zome_idx_planning",
  "zomes/rea_intent/lib",
  "zomes/rea_intent/rpc",
  "zomes/rea_intent/storage",
  "zomes/rea_intent/storage_consts",
  "zomes/rea_intent/zome",
  "zomes/rea_intent/integrity_zome",
  "zomes/rea_intent/zome_idx_planning",
  "zomes/rea_plan/lib",
  "zomes/rea_plan/rpc",
  "zomes/rea_plan/storage",
  "zomes/rea_plan/storage_consts",
  "zomes/rea_plan/zome",
  "zomes/rea_plan/integrity_zome",
  "zomes/rea_plan/zome_idx_plan",
  "zomes/rea_process/lib",
  "zomes/rea_process/rpc",
  "zomes/rea_process/storage",
  "zomes/rea_process/storage_consts",
  "zomes/rea_process/zome",
  "zomes/rea_process/integrity_zome",
  "zomes/rea_process/zome_idx_observation",
  "zomes/rea_process_specification/lib",
  "zomes/rea_process_specification/rpc",
  "zomes/rea_process_specification/storage",
  "zomes/rea_process_specification/storage_consts",
  "zomes/rea_process_specification/zome",
  "zomes/rea_process_specification/integrity_zome",
  "zomes/rea_process_specification/zome_idx_specification",
  "zomes/rea_proposal/lib",
  "zomes/rea_proposal/rpc",
  "zomes/rea_proposal/storage",
  "zomes/rea_proposal/storage_consts",
  "zomes/rea_proposal/zome",
  "zomes/rea_proposal/integrity_zome",
  "zomes/rea_proposal/zome_idx_proposal",
  "zomes/rea_proposed_intent/lib",
  "zomes/rea_proposed_intent/rpc",
  "zomes/rea_proposed_intent/storage",
  "zomes/rea_proposed_intent/storage_consts",
  "zomes/rea_proposed_intent/zome",
  "zomes/rea_proposed_intent/integrity_zome",
  "zomes/rea_proposed_intent/zome_idx_proposal",
  "zomes/rea_proposed_to/lib",
  "zomes/rea_proposed_to/rpc",
  "zomes/rea_proposed_to/storage",
  "zomes/rea_proposed_to/storage_consts",
  "zomes/rea_proposed_to/zome",
  "zomes/rea_proposed_to/integrity_zome",
  "zomes/rea_proposed_to/zome_idx_proposal",
  "zomes/rea_resource_specification/lib",
  "zomes/rea_resource_specification/rpc",
  "zomes/rea_resource_specification/storage",
  "zomes/rea_resource_specification/storage_consts",
  "zomes/rea_resource_specification/zome",
  "zomes/rea_resource_specification/integrity_zome",
  "zomes/rea_resource_specification/zome_idx_specification",
  "zomes/rea_satisfaction/lib",
  "zomes/rea_satisfaction/lib_destination",
  "zomes/rea_satisfaction/lib_origin",
  "zomes/rea_satisfaction/rpc",
  "zomes/rea_satisfaction/storage",
  "zomes/rea_satisfaction/storage_consts",
  "zomes/rea_satisfaction/zome_observation",
  "zomes/rea_satisfaction/zome_planning",
  "zomes/rea_satisfaction/integrity_zome",
  "zomes/rea_satisfaction/zome_idx_observation",
  "zomes/rea_satisfaction/zome_idx_planning",
  "zomes/rea_unit/lib",
  "zomes/rea_unit/rpc",
  "zomes/rea_unit/storage",
  "zomes/rea_unit/storage_consts",
  "zomes/rea_unit/zome",
  "zomes/rea_unit/integrity_zome",
  "zomes/rea_unit/zome_idx_specification",

	# Example customisations
  # "example/knowledge-system-extensions/zomes/beef_resource_specification/code",
  # "example/custom-resource-attributes/zomes/beef_economic_event/code",
  # "example/custom-resource-attributes/zomes/beef_economic_resource/code",

	# Third-party zomes
	"zomes/dna_auth_resolver",
  # "zomes/social_triangulation",
]

[workspace.dependencies]
serde = "1"
serde_bytes = "*"
chrono = { version = "0.4.22", default-features = false, features = ["clock", "std", "oldtime", "serde"] }
hdi = "0.3.1"
hdk = "0.2.1"
holochain = "0.2.1"
holo_hash = "0.2.1"
holochain_serialized_bytes = "0.0.51"
holochain_zome_types = { version = "0.2.1", default-features = false }
